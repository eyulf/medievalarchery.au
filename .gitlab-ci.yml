image: ruby:2.4

stages:
  - build
  - deploy

build-jekyll:
  stage: build
  tags:
    - private
    - jekyll
  before_script:
    - apt-get update -qq && apt-get install -y -qq nodejs
  script:
    - apt-get update -qq && apt-get install -y -qq nodejs
    - bundle install
    - bundle exec jekyll build
  artifacts:
    name: "site-files-$CI_COMMIT_REF_NAME"
    paths:
      - _site
    expire_in: 1 hour

.deploy-jekyll:
  stage: deploy
  image: alpine:latest
  tags:
    - private
    - jekyll
  before_script:
    - apk update && apk add openssh-client bash rsync
  script:
    - eval $(ssh-agent -s)
    - bash -c  'ssh-add -q <(echo "${SSH_PRIVATE_KEY}"|tr -d "\r")'
    - mkdir -p ~/.ssh
    - echo "${SSH_HOST_KEY}" > ~/.ssh/known_hosts
    - rsync -hrvz --delete _site/ "${SSH_WEBROOT_LOCATION}"
    - ssh ${SSH_POST_DEPLOY_SCRIPT}
    - cat ~/.ssh/known_hosts

  dependencies:
    - build-jekyll

deploy-staging:
  extends: .deploy-jekyll
  environment:
    name: staging
    url: https://preview.medievalarchery.org.au
  only:
    - preview
  variables:
    SSH_WEBROOT_LOCATION: ${SSH_WEBROOT_LOCATION_STAGING}
    SSH_POST_DEPLOY_SCRIPT: ${SSH_POST_DEPLOY_SCRIPT_STAGING}

deploy-production:
  extends: .deploy-jekyll
  environment:
    name: production
    url: https://medievalarchery.org.au
  only:
    - master
  variables:
    SSH_WEBROOT_LOCATION: ${SSH_WEBROOT_LOCATION_PRODUCTION}
    SSH_POST_DEPLOY_SCRIPT: ${SSH_POST_DEPLOY_SCRIPT_PRODUCTION}

